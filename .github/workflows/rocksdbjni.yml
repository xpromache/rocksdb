name: rocksdbjni
on: [push, pull_request]
jobs:
  # ======================== Windows ======================= #
  build-windows-vs2019:
  #  if: false
    runs-on: windows-2019
    env:
      CMAKE_GENERATOR: Visual Studio 16 2019
      CMAKE_PORTABLE: 1
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: "./.github/actions/windows-build-steps"
    - name: java files
      uses: actions/upload-artifact@v4.0.0
      with:
         name: "win64-java-files"
         path: "D:/a/rocksdb/rocksdb/build/java/Release/**"
         if-no-files-found: ignore
  # ============================ Java Jobs ============================ #
  build-linux-java-static:
  #  if: false
    runs-on: ubuntu-latest
    container:
      image: evolvedbinary/rocksjava:centos6_x64-be
      options: --shm-size=16gb
    steps:
    # The docker image is intentionally based on an OS that has an older GLIBC version.
    # That GLIBC is incompatibile with GitHub's actions/checkout. Thus we implement a manual checkout step.
    - name: Checkout
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        chown `whoami` . || true
        git clone --no-checkout https://oath2:$GH_TOKEN@github.com/${{ github.repository }}.git .
        git -c protocol.version=2 fetch --update-head-ok --no-tags --prune --no-recurse-submodules --depth=1 origin +${{ github.sha }}:${{ github.ref }}
        git checkout --progress --force ${{ github.ref }}
        git log -1 --format='%H'
    - uses: "./.github/actions/pre-steps"
    - name: Set Java Environment
      run: |-
        echo "JAVA_HOME=${JAVA_HOME}"
        which java && java -version
        which javac && javac -version
    - name: Build RocksDBJava Static Library
      run: scl enable devtoolset-7 'make V=1 J=8 -j8 rocksdbjavastatic'
    - uses: "./.github/actions/post-steps"
  build-linux-arm:
    if: false
    runs-on: ubuntu-arm # support to be added for open-source projects at the end of 2024
    steps:
        - uses: actions/checkout@v4.1.0
        - uses: "./.github/actions/pre-steps"
        - run: sudo apt-get update && sudo apt-get install -y build-essential
        - run: ROCKSDBTESTS_PLATFORM_DEPENDENT=only make V=1 J=4 -j4 all_but_some_tests check_some
        - uses: "./.github/actions/post-steps"

  build-macos-java-static:
    #if: false
    runs-on: macos-13
    env:
      JAVA_HOME: "/Library/Java/JavaVirtualMachines/liberica-jdk-8.jdk/Contents/Home"
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: maxim-lobanov/setup-xcode@v1.6.0
      with:
        xcode-version: 14.3.1
    - uses: "./.github/actions/increase-max-open-files-on-macos"
    - uses: "./.github/actions/install-gflags-on-macos"
    - uses: "./.github/actions/install-jdk8-on-macos"
    - uses: "./.github/actions/pre-steps-macos"
    - name: Set Java Environment
      run: |-
        echo "JAVA_HOME=${JAVA_HOME}"
        which java && java -version
        which javac && javac -version
    - name: Build RocksDBJava x86 and ARM Static Libraries
      run: make V=1 J=16 -j16 rocksdbjavastaticosx
    - uses: "./.github/actions/post-steps"
  build-macos-java-static-universal:
    #if: false
    runs-on: macos-13
    env:
      JAVA_HOME: "/Library/Java/JavaVirtualMachines/liberica-jdk-8.jdk/Contents/Home"
    steps:
    - uses: actions/checkout@v4.1.0
    - uses: maxim-lobanov/setup-xcode@v1.6.0
      with:
        xcode-version: 14.3.1
    - uses: "./.github/actions/increase-max-open-files-on-macos"
    - uses: "./.github/actions/install-gflags-on-macos"
    - uses: "./.github/actions/install-jdk8-on-macos"
    - uses: "./.github/actions/pre-steps-macos"
    - name: Set Java Environment
      run: |-
        echo "JAVA_HOME=${JAVA_HOME}"
        which java && java -version
        which javac && javac -version
    - name: Build RocksDBJava Universal Binary Static Library
      run: make V=1 J=16 -j16 rocksdbjavastaticosx_ub
    - uses: "./.github/actions/post-steps"

name: rocksdbjni
on: [push, pull_request]
jobs:
  # ======================== Linux ======================= #
  
  build-linux-amd64:
  #  if: false
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - uses: "./.github/actions/pre-steps"
    - uses: actions/setup-java@v4
      with:
         distribution: 'temurin'
         java-version: '11'
    - name: Set Java Environment
      run: |-
        echo "JAVA_HOME=${JAVA_HOME}"
        which java && java -version
        which javac && javac -version
    - name: Build RocksDBJava Static Library
      run: make V=1 J=8 -j8 rocksdbjavastatic
    - uses: actions/upload-artifact@v4
      with:
         name: linux-amd64
         path: java/target/**
  build-linux-arm:
    if: false
    runs-on: ubuntu-arm # support to be added for open-source projects at the end of 2024
    steps:
        - uses: actions/checkout@v4
        - uses: "./.github/actions/pre-steps"
        - run: sudo apt-get update && sudo apt-get install -y build-essential
        - run: ROCKSDBTESTS_PLATFORM_DEPENDENT=only make V=1 J=4 -j4 all_but_some_tests check_some
        
  
  # ======================== Windows ======================= #
  build-windows-amd64:
  #  if: false
    runs-on: windows-2019
    env:
      CMAKE_GENERATOR: Visual Studio 16 2019
      CMAKE_PORTABLE: 1
    steps:
    - uses: actions/checkout@v4
    - uses: "./.github/actions/windows-build-steps"
    - name: libraries
      uses: actions/upload-artifact@v4
      with:
         name: windows-amd64
         path: "D:/a/rocksdb/rocksdb/build/java/Release/librocksdbjni-win64.dll"
  
  # ======================== OS X ======================= #
  
  build-macosx:
    #if: false
    runs-on: macos-13
    env:
      JAVA_HOME: "/Library/Java/JavaVirtualMachines/liberica-jdk-8.jdk/Contents/Home"
    steps:
    - uses: actions/checkout@v4
    - uses: maxim-lobanov/setup-xcode@v1.6.0
      with:
        xcode-version: 14.3.1
    - uses: "./.github/actions/increase-max-open-files-on-macos"
    - uses: "./.github/actions/install-gflags-on-macos"
    - uses: "./.github/actions/install-jdk8-on-macos"
    - uses: "./.github/actions/pre-steps-macos"
    - name: Set Java Environment
      run: |-
        echo "JAVA_HOME=${JAVA_HOME}"
        which java && java -version
        which javac && javac -version
    - name: Build RocksDBJava x86 and ARM Static Libraries
      run: make V=1 J=16 -j16 rocksdbjavastaticosx
    - uses: actions/upload-artifact@v4
      with:
         name: macosx
         path: java/target/rocsdbjni*.jnilib
  
  # ======================== Final JAR assembly ======================= #
  package:
    runs-on: ubuntu-latest
    needs: [build-linux-amd64, build-macosx, build-windows-amd64]
    steps:
    - uses: actions/checkout@v4
    - name: Download Linux AMD64 artifact
      uses: actions/download-artifact@v4
      with:
        name: linux-amd64
        path: build
    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: macosx
        path: build
    - name: Download Windows AMD64 artifact
      uses: actions/download-artifact@v4
      with:
        name: windows-amd64
        path: build
    #- name: Create JAR with native libraries
    #  run: |
    #      tar
    - name: Upload combined JAR artifact
      uses: actions/upload-artifact@v4
      with:
         name: "rocksdbjni-jar"
         path: build
    
name: windows-build-steps
runs:
  using: composite
  steps:
  - name: Add msbuild to PATH
    uses: microsoft/setup-msbuild@v2
  - name: Set up lz4
    run: |-
      git clone https://github.com/Microsoft/vcpkg.git
      cd vcpkg
      bootstrap-vcpkg.sh
      vcpkg integrate install
      $env:VCPKG_LIBRARY_LINKAGE = 'static'
      vcpkg.exe install lz4:x64-windows-static
      vcpkg.exe install zstd:x64-windows-static
      vcpkg.exe install snappy:x64-windows-static
    shell: pwsh
  - name: Build RocksDB
    env:
      THIRDPARTY_HOME: ${{ github.workspace }}/thirdparty
      CMAKE_HOME: C:/Program Files/CMake
      CMAKE_BIN: C:/Program Files/CMake/bin/cmake.exe
      CTEST_BIN: C:/Program Files/CMake/bin/ctest.exe
      JAVA_HOME: C:/Program Files/BellSoft/LibericaJDK-8
      SNAPPY_HOME: ${{ github.workspace }}/vcpkg/installed/x64-windows-static
      SNAPPY_INCLUDE: ${{ github.workspace }}/vcpkg/installed/x64-windows-static/include
      SNAPPY_LIB_RELEASE: ${{ github.workspace }}/vcpkg/installed/x64-windows-static/lib/snappy.lib
      LZ4_HOME: ${{ github.workspace }}/vcpkg/installed/x64-windows-static
      LZ4_INCLUDE: ${{ github.workspace }}/vcpkg/installed/x64-windows-static/include
      LZ4_LIB_RELEASE: ${{ github.workspace }}/vcpkg/installed/x64-windows-static/lib/lz4.lib
      ZSTD_HOME: ${{ github.workspace }}/vcpkg/installed/x64-windows-static
      ZSTD_INCLUDE: ${{ github.workspace }}/vcpkg/installed/x64-windows-static/include
      ZSTD_LIB_RELEASE: ${{ github.workspace }}/vcpkg/installed/x64-windows-static/lib/zstd.lib
    run: |-
      # NOTE: if ... Exit $LASTEXITCODE lines needed to exit and report failure
      echo "===================== Install Dependencies ====================="      
      echo "==========  Installing JDK..."
      choco install liberica8jdk -y
      if(!$?) { Exit $LASTEXITCODE }
      mkdir $Env:THIRDPARTY_HOME
      cd $Env:THIRDPARTY_HOME
      
      echo ======================== Build RocksDB =========================
      cd ${{ github.workspace }}
      $env:Path = $env:JAVA_HOME + ";" + $env:Path
      mkdir build
      cd build
      & cmake -G "$Env:CMAKE_GENERATOR" -DCMAKE_BUILD_TYPE=Release -DROCKSDB_BUILD_SHARED=0 -DOPTDBG=0 -DSNAPPY=1 -DLZ4=1 -DZSTD=1 -DJNI=1 -DWITH_MD_LIBRARY=OFF ..
      if(!$?) { Exit $LASTEXITCODE }
      cd ..
      echo "Building with VS version: $Env:CMAKE_GENERATOR"
      msbuild build/rocksdb.sln -maxCpuCount -property:Configuration=Release -property:Platform=x64 -target:rocksdbjni
      #if(!$?) { Exit $LASTEXITCODE }
    shell: pwsh
